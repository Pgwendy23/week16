pipeline {
    agent any 
    tools {
        maven 'M2_HOME'
    }
    stages{
        stage('sonarqube scan'){
           agent {docker { image 'maven:3-amazoncorretto-17-debian'}}
            steps{
                withSonarQubeEnv('sonarserver'){
                sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Pgwendy23_week16'
                }

            }
     
        }
        stage('all maven commands'){
            steps{
                sh 'mvn clean compile install package'
            }
        }
        stage('upload artifact'){
            steps{
                sh 'curl -uadmin:AP3BQnqyqrTXppzhTKCKKBhQepF -T  target/bio*.jar "http://ec2-54-145-156-222.compute-1.amazonaws.com:8081/artifactory/geoapp/"'
            }
             
        }       
         stage('image build'){
            steps{
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 358729504175.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t geoapp .'
            }
         }
         stage('push image'){
            steps{
                sh 'docker tag geoapp:latest 358729504175.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
                sh 'docker push 358729504175.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
            }
         }    
    }
}
